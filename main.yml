---
  - hosts: localhost
    tasks:
    # Need to break-out into distro-specific rolls: Debian/Ubuntu, Arch, etc
    - name: "Update Packages"
      become: yes
      apt:
        name: "*"
        state: latest
        update_cache: yes
    
    - name: "Install pre-requisite packages for docker install"
      become: yes
      apt:
        name: "{{ packagesdep }}"
        force_apt_get: yes
        state: latest
        update_cache: yes
      vars:
        packagesdep:
        - apt-transport-https
        - ca-certificates
        - curl
        - git
        - gnupg2
        - python3-pip
        - software-properties-common
        - wget

    - name: "Add apt signing key for docker-ce"
      become: yes
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
    
    - name: "Add Docker official repository"
      become: yes
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release | lower}} stable
        state: present

    - name: "Install Docker-CE"
      become: yes
      apt:
        name: "docker-ce"
        state: latest
        update_cache: yes
        force_apt_get: yes

    #>>>  Begin universal platform, agnostic stuff <<<
    # Docker goodies rely on the docker python module
    - name: "Install the 'docker' python module"
      pip:
        name: docker

    - name: "Download go-ipfs"
      docker_container:
        name: "go-ipfs"
        image: "ipfs/go-ipfs"
        exposed_ports:
          - 4001:4001
          - 127.0.0.1:8080:8080
          - 172.0.0.1:5001:5001
        volumes:
          - /data/go-ipfs/export:/export
          - /data/go-ipfs/data:/data/ipfs

    - name: "Install ansible-galaxy content"
      command: ansible-galaxy -r roles/requirements.yml -p roles/

      # This is unintentially (mostly) specific to RPi's with USB drives
      - name: "Create ext4 partition on extra drive"
      community.general.parted:
        device: /dev/sda
        number: 1
        align: optimal
        label: gpt
        state: present
        name: Persistence
        fs_type: ext4

      - name: "Mount Persistence to /data"
        ansible.posic.mount:
          path: /dev/dis/by-name/Persistence
          fstype: ext4
          opts: defaults,noatime,nodiratime
          state: present

#    - name: "Find blank disks of at least 64 GiB"
#      command: echo do somewhing with {{ item }}
#      with_items: 
#        - "{{ ansible_local.unused_disks }}"
#      when:
#        - min_value <= ansible_devices[item].sectors * ansible_devices[item].sectorsize <= max_value 
#      vars:
#        min_value: '{{ user_input * 1024 * 1024 * 1024 * 64 }}'
#        max_value: '{{ user_input * 1024 * 1024 * 1024 * 8192 }}'